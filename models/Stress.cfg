\* Stress testing configuration for Alpenglow protocol
\* Large-scale scenarios with maximum adversarial conditions

SPECIFICATION Spec

CONSTANTS
    \* Large validator set for stress testing
    Validators = {v1, v2, v3, v4, v5, v6, v7, v8, v9, v10,
                  v11, v12, v13, v14, v15, v16, v17, v18, v19, v20}
    
    \* Maximum adversarial thresholds (20% Byzantine + 20% Offline)
    ByzantineValidators = {v17, v18, v19, v20}  \* 20% Byzantine stake
    OfflineValidators = {v13, v14, v15, v16}    \* 20% Offline stake
    
    \* Extended testing range
    MaxSlot = 10
    MaxView = 20
    MaxTime = 100
    
    \* Realistic stake distribution (total = 200)
    \* Byzantine: 40 (20%), Offline: 40 (20%), Honest: 120 (60%)
    Stake = [v1 |-> 15, v2 |-> 15, v3 |-> 12, v4 |-> 12, v5 |-> 10,
             v6 |-> 10, v7 |-> 10, v8 |-> 10, v9 |-> 8, v10 |-> 8,
             v11 |-> 6, v12 |-> 6, v13 |-> 10, v14 |-> 10, v15 |-> 10,
             v16 |-> 10, v17 |-> 10, v18 |-> 10, v19 |-> 10, v20 |-> 10]
    
    \* Network parameters (adversarial conditions)
    GST = 15  \* Late GST for worst-case testing
    Delta = 5  \* High network delay
    MaxMessageSize = 8192
    NetworkCapacity = 100000
    MaxBufferSize = 500
    PartitionTimeout = 20
    
    \* Erasure coding parameters (Rotor stress test)
    K = 16
    N = 24
    MaxBlocks = 20
    BandwidthLimit = 50000
    RetryTimeout = 5
    MaxRetries = 5
    
    \* Block and transaction limits
    MaxBlockSize = 2000
    BandwidthPerValidator = 5000
    MaxTransactions = 200
    
    \* Protocol parameters (Votor under stress)
    TimeoutDelta = 10
    InitialLeader = v1
    FastPathStake = 80  \* Impossible with 40% faults
    SlowPathStake = 60  \* Exactly achievable
    SkipPathStake = 60
    
    \* Cryptographic abstractions
    MaxSignatures = 200
    MaxCertificates = 50

\* Relaxed constraints for stress testing
CONSTRAINT StateConstraint
STATE_CONSTRAINT
    /\ currentSlot <= MaxSlot
    /\ clock <= MaxTime
    /\ \A v \in Validators : votorView[v] <= MaxView
    /\ Cardinality(networkMessages) <= 1000
    /\ Cardinality(certificates) <= MaxCertificates
    /\ Cardinality(votorVotes) <= MaxSignatures
    /\ Cardinality(rotorShreds) <= N * MaxBlocks
    /\ Cardinality(networkPartitioned) <= 4

\* Critical properties under maximum stress
INVARIANT TypeInvariant
INVARIANT SafetyInvariant
INVARIANT HonestVoteUniqueness
INVARIANT ChainConsistency
INVARIANT ResilienceBounds

\* Stress test properties
PROPERTY Liveness
PROPERTY EventualFinalization
PROPERTY PartitionRecovery

\* Maximum resilience properties
PROPERTY Combined2020Resilience
PROPERTY MaxByzantineTheorem
PROPERTY MaxOfflineTheorem

\* Performance under stress
PROPERTY GracefulDegradation
PROPERTY SelfHealing

\* No symmetry for comprehensive stress testing
\* Explore all possible adversarial behaviors

\* Action constraints for stress scenarios
ACTION_CONSTRAINT StressActionConstraint
ACTION_CONSTRAINT
    /\ Cardinality({msg \in networkMessages : msg.type = "block"}) <= MaxBlocks
    /\ Cardinality({msg \in networkMessages : msg.type = "vote"}) <= MaxSignatures
    /\ Cardinality({msg \in networkMessages : msg.type = "shred"}) <= N * MaxBlocks
    /\ Cardinality({msg \in networkMessages : msg.type = "repair"}) <= MaxBlocks * 2

\* Initial state
INIT Init

\* Next-state relation
NEXT Next

\* Comprehensive view for stress analysis
VIEW <<currentSlot, [v \in Validators |-> votorView[v]], Cardinality(finalizedBlocks[currentSlot]), clock>>

