[package]
name = "alpenglow-stateright"
version = "0.1.0"
edition = "2021"
authors = ["Alpenglow Team"]
description = "Stateright-based formal verification implementation for Solana Alpenglow consensus protocol"
license = "MIT OR Apache-2.0"
repository = "https://github.com/solana-labs/alpenglow"
keywords = ["consensus", "blockchain", "formal-verification", "stateright", "solana"]
categories = ["cryptography", "simulation", "development-tools"]

[dependencies]
# Core Stateright framework - external crate for cross-validation
stateright = "0.29"  # Required for cross-validation tests

# Async runtime for network simulation and timing
tokio = { version = "1.0", features = ["full"] }
tokio-util = "0.7"

# Serialization for message passing and state persistence
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
bincode = "1.3"

# Cryptographic primitives for signatures and hashing (matching TLA+ Crypto module)
ed25519-dalek = { version = "2.0", features = ["rand_core"] }
sha2 = "0.10"
blake3 = "1.5"
rand = "0.8"
rand_core = "0.6"

# Erasure coding for Rotor block propagation (K/N sharding from TLA+ specs)
reed-solomon-erasure = "6.0"

# Network simulation and timing (supporting GST, Delta bounds from TLA+)
futures = "0.3"
async-trait = "0.1"

# Data structures and utilities
indexmap = "2.0"
smallvec = "1.11"
bitvec = "1.0"
thiserror = "1.0"
anyhow = "1.0"

# Logging and diagnostics
tracing = { version = "0.1", optional = true }
tracing-subscriber = { version = "0.3", features = ["env-filter"], optional = true }

# Testing and property-based testing
proptest = "1.4"
quickcheck = "1.0"

# Performance monitoring
criterion = { version = "0.5", optional = true }

# Mathematical operations for stake calculations (Utils!Sum from TLA+)
num-bigint = "0.4"
num-rational = "0.4"
num-traits = "0.2"

# Time handling for consensus timing (clock, timeouts from TLA+)
chrono = { version = "0.4", features = ["serde"] }

# Configuration management
config = "0.14"
toml = "0.8"

# Parallel processing for large-scale verification
rayon = { version = "1.8", optional = true }

# Memory-efficient collections
dashmap = "5.5"

# Additional dependencies for TLA+ cross-validation
# State space exploration and model checking utilities
petgraph = "0.6"
im = "15.1"

# Placeholder dependencies removed - they were causing build issues

# Stake-weighted sampling and leader selection
rand_distr = "0.4"

# Message ordering and delivery guarantees
ordered-float = "4.2"

# Bandwidth monitoring and throttling (for bandwidthUsage from TLA+)
governor = "0.6"

# Statistical analysis for cross-validation
statrs = "0.16"

# JSON-RPC removed due to dependency conflicts

[dev-dependencies]
# Additional testing frameworks
tokio-test = "0.4"
serial_test = "3.0"
tempfile = "3.8"
env_logger = "0.10"

# TLA+ integration testing - placeholder removed

[features]
default = ["tracing", "tracing-subscriber"]

# Enable benchmarking support
benchmarks = ["criterion"]

# Enable Byzantine behavior simulation (ByzantineValidators from TLA+)
byzantine = []

# Enable large-scale network simulation (20+ validators)
large-scale = ["rayon"]

# Enable performance profiling
profiling = ["criterion"]

# Enable cross-validation with TLA+ model checker results
cross-validation = []

# Enable economic model validation (stake calculations from TLA+)
economic-model = []

# Enable advanced network conditions simulation (networkPartitions from TLA+)
advanced-network = []

# Enable Votor consensus component validation
votor-validation = []

# Enable Rotor propagation component validation
rotor-validation = []

# Enable full TLA+ specification compliance checking
tla-compliance = ["cross-validation", "votor-validation", "rotor-validation"]

# Note: Binaries will be implemented in future iterations
# Currently focusing on library functionality

[profile.release]
# Optimize for verification performance
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"

[profile.dev]
# Fast compilation for development
opt-level = 0
debug = true
overflow-checks = true

[profile.test]
# Balanced profile for testing
opt-level = 1
debug = true

[workspace]
members = [".", "../implementation"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

# TLA+ specification mapping metadata
[package.metadata.tla-specs]
alpenglow = "specs/Alpenglow.tla"
votor = "specs/Votor.tla"
rotor = "specs/Rotor.tla"
network = "specs/Network.tla"

# Cross-validation configuration
[package.metadata.cross-validation]
# Properties to verify against TLA+ specifications
safety-properties = [
    "Safety",
    "CertificateUniqueness",
    "ChainConsistency",
    "ConsistentFinalization"
]
liveness-properties = [
    "Progress",
    "FastPath",
    "BoundedFinalization"
]
resilience-properties = [
    "ByzantineResilience",
    "OfflineResilience",
    "PartitionRecovery",
    "Combined2020Resilience"
]
integration-properties = [
    "RotorVotorIntegration",
    "StakeProportionalBandwidth"
]
