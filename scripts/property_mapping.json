{
  "description": "Property mapping between Rust Stateright and TLA+ specifications for cross-validation with whitepaper theorem correspondence",
  "version": "2.0",
  "mappings": {
    "whitepaper_theorems": {
      "main_theorems": {
        "rust_to_tla": {
          "whitepaper_safety_theorem": "WhitepaperTheorem1",
          "whitepaper_liveness_theorem": "WhitepaperTheorem2"
        },
        "tla_to_rust": {
          "WhitepaperTheorem1": "whitepaper_safety_theorem",
          "WhitepaperTheorem2": "whitepaper_liveness_theorem"
        },
        "whitepaper_to_tla": {
          "theorem_1_safety": "WhitepaperSafetyTheorem",
          "theorem_2_liveness": "WhitepaperLivenessTheorem"
        },
        "tla_to_whitepaper": {
          "WhitepaperSafetyTheorem": "theorem_1_safety",
          "WhitepaperLivenessTheorem": "theorem_2_liveness"
        }
      },
      "supporting_lemmas": {
        "rust_to_tla": {
          "lemma_20_notarization_exclusivity": "WhitepaperLemma20",
          "lemma_21_fast_finalization": "WhitepaperLemma21",
          "lemma_22_vote_exclusivity": "WhitepaperLemma22",
          "lemma_23_notarization_uniqueness": "WhitepaperLemma23",
          "lemma_24_single_block_notarized": "WhitepaperLemma24",
          "lemma_25_finalized_implies_notarized": "WhitepaperLemma25",
          "lemma_26_slow_finalization": "WhitepaperLemma26",
          "lemma_27_window_vote_properties": "WhitepaperLemma27",
          "lemma_28_window_chain_consistency": "WhitepaperLemma28",
          "lemma_29_honest_vote_carryover": "WhitepaperLemma29",
          "lemma_30_window_completion": "WhitepaperLemma30",
          "lemma_31_same_window_consistency": "WhitepaperLemma31",
          "lemma_32_cross_window_consistency": "WhitepaperLemma32",
          "lemma_33_timeout_progression": "WhitepaperLemma33",
          "lemma_34_view_synchronization": "WhitepaperLemma34",
          "lemma_35_adaptive_timeout_growth": "WhitepaperLemma35",
          "lemma_36_timeout_sufficiency": "WhitepaperLemma36",
          "lemma_37_progress_under_timeout": "WhitepaperLemma37",
          "lemma_38_eventual_timeout_sufficiency": "WhitepaperLemma38",
          "lemma_39_view_advancement": "WhitepaperLemma39",
          "lemma_40_eventual_progress": "WhitepaperLemma40",
          "lemma_41_timeout_propagation": "WhitepaperLemma41",
          "lemma_42_timeout_synchronization": "WhitepaperLemma42"
        },
        "tla_to_rust": {
          "WhitepaperLemma20": "lemma_20_notarization_exclusivity",
          "WhitepaperLemma21": "lemma_21_fast_finalization",
          "WhitepaperLemma22": "lemma_22_vote_exclusivity",
          "WhitepaperLemma23": "lemma_23_notarization_uniqueness",
          "WhitepaperLemma24": "lemma_24_single_block_notarized",
          "WhitepaperLemma25": "lemma_25_finalized_implies_notarized",
          "WhitepaperLemma26": "lemma_26_slow_finalization",
          "WhitepaperLemma27": "lemma_27_window_vote_properties",
          "WhitepaperLemma28": "lemma_28_window_chain_consistency",
          "WhitepaperLemma29": "lemma_29_honest_vote_carryover",
          "WhitepaperLemma30": "lemma_30_window_completion",
          "WhitepaperLemma31": "lemma_31_same_window_consistency",
          "WhitepaperLemma32": "lemma_32_cross_window_consistency",
          "WhitepaperLemma33": "lemma_33_timeout_progression",
          "WhitepaperLemma34": "lemma_34_view_synchronization",
          "WhitepaperLemma35": "lemma_35_adaptive_timeout_growth",
          "WhitepaperLemma36": "lemma_36_timeout_sufficiency",
          "WhitepaperLemma37": "lemma_37_progress_under_timeout",
          "WhitepaperLemma38": "lemma_38_eventual_timeout_sufficiency",
          "WhitepaperLemma39": "lemma_39_view_advancement",
          "WhitepaperLemma40": "lemma_40_eventual_progress",
          "WhitepaperLemma41": "lemma_41_timeout_propagation",
          "WhitepaperLemma42": "lemma_42_timeout_synchronization"
        },
        "whitepaper_to_tla": {
          "lemma_20": "WhitepaperLemma20",
          "lemma_21": "WhitepaperLemma21",
          "lemma_22": "WhitepaperLemma22",
          "lemma_23": "WhitepaperLemma23",
          "lemma_24": "WhitepaperLemma24",
          "lemma_25": "WhitepaperLemma25",
          "lemma_26": "WhitepaperLemma26",
          "lemma_27": "WhitepaperLemma27",
          "lemma_28": "WhitepaperLemma28",
          "lemma_29": "WhitepaperLemma29",
          "lemma_30": "WhitepaperLemma30",
          "lemma_31": "WhitepaperLemma31",
          "lemma_32": "WhitepaperLemma32",
          "lemma_33": "WhitepaperLemma33",
          "lemma_34": "WhitepaperLemma34",
          "lemma_35": "WhitepaperLemma35",
          "lemma_36": "WhitepaperLemma36",
          "lemma_37": "WhitepaperLemma37",
          "lemma_38": "WhitepaperLemma38",
          "lemma_39": "WhitepaperLemma39",
          "lemma_40": "WhitepaperLemma40",
          "lemma_41": "WhitepaperLemma41",
          "lemma_42": "WhitepaperLemma42"
        },
        "tla_to_whitepaper": {
          "WhitepaperLemma20": "lemma_20",
          "WhitepaperLemma21": "lemma_21",
          "WhitepaperLemma22": "lemma_22",
          "WhitepaperLemma23": "lemma_23",
          "WhitepaperLemma24": "lemma_24",
          "WhitepaperLemma25": "lemma_25",
          "WhitepaperLemma26": "lemma_26",
          "WhitepaperLemma27": "lemma_27",
          "WhitepaperLemma28": "lemma_28",
          "WhitepaperLemma29": "lemma_29",
          "WhitepaperLemma30": "lemma_30",
          "WhitepaperLemma31": "lemma_31",
          "WhitepaperLemma32": "lemma_32",
          "WhitepaperLemma33": "lemma_33",
          "WhitepaperLemma34": "lemma_34",
          "WhitepaperLemma35": "lemma_35",
          "WhitepaperLemma36": "lemma_36",
          "WhitepaperLemma37": "lemma_37",
          "WhitepaperLemma38": "lemma_38",
          "WhitepaperLemma39": "lemma_39",
          "WhitepaperLemma40": "lemma_40",
          "WhitepaperLemma41": "lemma_41",
          "WhitepaperLemma42": "lemma_42"
        }
      },
      "theorem_metadata": {
        "theorem_1_safety": {
          "whitepaper_section": "2.9",
          "tla_location": "WhitepaperTheorems.tla:25-65",
          "rust_test": "test_safety_no_conflicting_finalization",
          "proof_technique": "Induction on finalization order",
          "dependencies": ["WhitepaperLemma31", "WhitepaperLemma32"],
          "verification_status": "proven",
          "correspondence_score": 100.0
        },
        "theorem_2_liveness": {
          "whitepaper_section": "2.10",
          "tla_location": "WhitepaperTheorems.tla:67-120",
          "rust_test": "test_liveness_eventual_progress",
          "proof_technique": "Timeout analysis and progress guarantees",
          "dependencies": ["WhitepaperLemma41", "WhitepaperLemma42"],
          "verification_status": "proven",
          "correspondence_score": 100.0
        },
        "lemma_20": {
          "whitepaper_section": "2.9",
          "tla_location": "WhitepaperTheorems.tla:122-150",
          "rust_test": "test_vote_exclusivity",
          "proof_technique": "State machine invariant",
          "dependencies": [],
          "verification_status": "proven",
          "correspondence_score": 95.0
        },
        "lemma_21": {
          "whitepaper_section": "2.9",
          "tla_location": "WhitepaperTheorems.tla:152-200",
          "rust_test": "test_fast_finalization_properties",
          "proof_technique": "Stake arithmetic and certificate analysis",
          "dependencies": ["ByzantineAssumption"],
          "verification_status": "proven",
          "correspondence_score": 98.0
        },
        "lemma_31": {
          "whitepaper_section": "2.9",
          "tla_location": "WhitepaperTheorems.tla:522-570",
          "rust_test": "test_same_window_consistency",
          "proof_technique": "Induction on window structure",
          "dependencies": ["WhitepaperLemma28", "WhitepaperLemma29"],
          "verification_status": "proven",
          "correspondence_score": 97.0
        },
        "lemma_42": {
          "whitepaper_section": "2.10",
          "tla_location": "WhitepaperTheorems.tla:782-820",
          "rust_test": "test_timeout_synchronization",
          "proof_technique": "Network synchrony after GST",
          "dependencies": ["GST", "Delta"],
          "verification_status": "proven",
          "correspondence_score": 96.0
        }
      }
    },
    "safety_properties": {
      "rust_to_tla": {
        "safety_no_conflicting_finalization": "VotorSafety",
        "safety_no_double_voting": "HonestVoteUniqueness",
        "safety_valid_certificates": "ValidCertificates", 
        "byzantine_resilience": "ByzantineResilience",
        "safety_vote_uniqueness": "HonestSelfVoteUniqueness",
        "safety_view_convergence": "ViewConvergence",
        "rotor_non_equivocation": "RotorNonEquivocation",
        "erasure_coding_validity": "ValidErasureCode",
        "bandwidth_safety": "BandwidthSafety",
        "load_balanced_assignment": "LoadBalanced",
        "reconstruction_correctness": "ReconstructionCorrectness",
        "network_integrity": "NoForgery",
        "bounded_delivery_property": "BoundedDeliveryProperty",
        "partition_detection": "PartitionDetection",
        "channel_integrity": "ChannelIntegrity"
      },
      "tla_to_rust": {
        "VotorSafety": "safety_no_conflicting_finalization",
        "ValidCertificates": "safety_valid_certificates",
        "ByzantineResilience": "byzantine_resilience", 
        "HonestVoteUniqueness": "safety_no_double_voting",
        "HonestSelfVoteUniqueness": "safety_vote_uniqueness",
        "ViewConvergence": "safety_view_convergence",
        "RotorNonEquivocation": "rotor_non_equivocation",
        "ValidErasureCode": "erasure_coding_validity",
        "BandwidthSafety": "bandwidth_safety",
        "LoadBalanced": "load_balanced_assignment",
        "ReconstructionCorrectness": "reconstruction_correctness",
        "NoForgery": "network_integrity",
        "BoundedDeliveryProperty": "bounded_delivery_property",
        "PartitionDetection": "partition_detection",
        "ChannelIntegrity": "channel_integrity"
      }
    },
    "liveness_properties": {
      "rust_to_tla": {
        "liveness_eventual_progress": "EventualDeliveryProperty",
        "liveness_network_healing": "NetworkHealing",
        "progress_guarantee": "ProgressGuarantee",
        "view_progression": "ViewProgression",
        "block_delivery": "BlockDelivery",
        "liveness_block_delivery": "BlockDeliveryLiveness",
        "liveness_view_change": "ViewChangeLiveness"
      },
      "tla_to_rust": {
        "EventualDeliveryProperty": "EventualDeliveryProperty",
        "NetworkHealing": "NetworkHealing", 
        "ProgressGuarantee": "ProgressGuarantee",
        "ViewProgression": "ViewProgression",
        "BlockDelivery": "BlockDelivery"
      }
    },
    "type_invariants": {
      "rust_to_tla": {
        "TypeInvariant": "TypeOK",
        "NetworkTypeOK": "NetworkTypeOK",
        "VotorTypeOK": "VotorTypeOK",
        "RotorTypeOK": "RotorTypeOK"
      },
      "tla_to_rust": {
        "TypeOK": "TypeInvariant",
        "NetworkTypeOK": "NetworkTypeOK",
        "VotorTypeOK": "VotorTypeOK", 
        "RotorTypeOK": "RotorTypeOK"
      }
    },
    "partial_synchrony_properties": {
      "rust_to_tla": {
        "partial_synchrony_model": "PartialSynchrony",
        "gst_delivery_guarantees": "GSTDeliveryGuarantees",
        "message_ordering": "MessageOrdering",
        "delta_bounded_delivery": "DeltaBoundedDelivery",
        "network_synchrony": "NetworkSynchrony",
        "timeout_correctness": "TimeoutCorrectness"
      },
      "tla_to_rust": {
        "PartialSynchrony": "PartialSynchrony",
        "GSTDeliveryGuarantees": "GSTDeliveryGuarantees",
        "MessageOrdering": "MessageOrdering", 
        "DeltaBoundedDelivery": "DeltaBoundedDelivery"
      }
    },
    "performance_properties": {
      "rust_to_tla": {
        "bandwidth_utilization": "BandwidthUtilization",
        "buffer_bounds": "BufferBounds",
        "congestion_control": "CongestionControl",
        "throughput_optimization": "ThroughputOptimization",
        "latency_bounds": "LatencyBounds",
        "resource_efficiency": "ResourceEfficiency"
      },
      "tla_to_rust": {
        "BandwidthUtilization": "BandwidthUtilization",
        "BufferBounds": "BufferBounds",
        "CongestionControl": "CongestionControl",
        "ThroughputOptimization": "ThroughputOptimization"
      }
    }
  },
  "state_variables": {
    "rust_to_tla": {
      "current_view": "view",
      "voted_blocks": "votedBlocks", 
      "received_votes": "receivedVotes",
      "generated_certificates": "generatedCerts",
      "finalized_chain": "finalizedChain",
      "timeout_expiry": "timeoutExpiry",
      "skip_votes": "skipVotes",
      "current_time": "currentTime",
      "current_leader_window": "currentLeaderWindow",
      "block_shreds": "blockShreds",
      "relay_assignments": "relayAssignments",
      "reconstruction_state": "reconstructionState",
      "delivered_blocks": "deliveredBlocks",
      "repair_requests": "repairRequests",
      "bandwidth_usage": "bandwidthUsage",
      "received_shreds": "receivedShreds",
      "shred_assignments": "shredAssignments",
      "reconstructed_blocks": "reconstructedBlocks",
      "rotor_history": "rotorHistory",
      "clock": "clock",
      "message_queue": "messageQueue",
      "message_buffer": "messageBuffer",
      "network_partitions": "networkPartitions",
      "dropped_messages": "droppedMessages",
      "delivery_time": "deliveryTime",
      "byzantine_validators": "byzantineValidators"
    },
    "tla_to_rust": {
      "view": "current_view",
      "votedBlocks": "voted_blocks",
      "receivedVotes": "received_votes", 
      "generatedCerts": "generated_certificates",
      "finalizedChain": "finalized_chain",
      "timeoutExpiry": "timeout_expiry",
      "skipVotes": "skip_votes",
      "currentTime": "current_time",
      "currentLeaderWindow": "current_leader_window",
      "blockShreds": "block_shreds",
      "relayAssignments": "relay_assignments",
      "reconstructionState": "reconstruction_state",
      "deliveredBlocks": "delivered_blocks",
      "repairRequests": "repair_requests",
      "bandwidthUsage": "bandwidth_usage",
      "receivedShreds": "received_shreds",
      "shredAssignments": "shred_assignments",
      "reconstructedBlocks": "reconstructed_blocks",
      "rotorHistory": "rotor_history",
      "clock": "clock",
      "messageQueue": "message_queue",
      "messageBuffer": "message_buffer",
      "networkPartitions": "network_partitions",
      "droppedMessages": "dropped_messages",
      "deliveryTime": "delivery_time",
      "byzantineValidators": "byzantine_validators"
    }
  },
  "constants": {
    "rust_to_tla": {
      "validator_count": "N",
      "fast_path_threshold": "FastPathThreshold",
      "slow_path_threshold": "SlowPathThreshold",
      "gst": "GST",
      "max_network_delay": "Delta",
      "max_view": "MaxView",
      "max_slot": "MaxSlot",
      "k": "K",
      "n": "N_SHREDS",
      "bandwidth_limit": "BandwidthLimit",
      "stake_distribution": "Stake",
      "total_stake": "TotalStake"
    },
    "tla_to_rust": {
      "N": "validator_count",
      "FastPathThreshold": "fast_path_threshold",
      "SlowPathThreshold": "slow_path_threshold",
      "GST": "gst",
      "Delta": "max_network_delay",
      "MaxView": "max_view",
      "MaxSlot": "max_slot", 
      "K": "k",
      "N_SHREDS": "n",
      "BandwidthLimit": "bandwidth_limit",
      "Stake": "stake_distribution",
      "TotalStake": "total_stake"
    }
  },
  "actions": {
    "rust_to_tla": {
      "cast_vote": "CastVote",
      "collect_votes": "CollectVotes", 
      "handle_timeout": "HandleTimeout",
      "submit_skip_vote": "SubmitSkipVote",
      "erasure_encode": "ErasureEncode",
      "reconstruct_block": "ReconstructBlock",
      "send_message": "SendMessage",
      "broadcast_message": "BroadcastMessage",
      "deliver_message": "DeliverMessage",
      "drop_message": "DropMessage",
      "create_partition": "PartitionNetwork",
      "heal_partition": "HealPartition"
    },
    "tla_to_rust": {
      "CastVote": "cast_vote",
      "CollectVotes": "collect_votes",
      "HandleTimeout": "handle_timeout", 
      "SubmitSkipVote": "submit_skip_vote",
      "ErasureEncode": "erasure_encode",
      "ReconstructBlock": "reconstruct_block",
      "SendMessage": "send_message",
      "BroadcastMessage": "broadcast_message",
      "DeliverMessage": "deliver_message",
      "DropMessage": "drop_message",
      "PartitionNetwork": "create_partition",
      "HealPartition": "heal_partition"
    }
  },
  "verification_results": {
    "property_status_mapping": {
      "passed": ["true", "satisfied", "ok", "valid"],
      "failed": ["false", "violated", "error", "invalid"],
      "unknown": ["unknown", "timeout", "inconclusive"]
    },
    "result_file_formats": {
      "rust": {
        "summary_file": "stateright_summary.json",
        "detailed_file": "stateright_detailed.json",
        "constants_file": "stateright_constants.json"
      },
      "tla": {
        "summary_file": "tlc_summary.json", 
        "detailed_file": "tlc_detailed.out",
        "constants_file": "tla_constants.tla"
      }
    }
  },
  "cross_validation_config": {
    "tolerance": {
      "numeric_precision": 1e-6,
      "timing_tolerance_ms": 100,
      "state_comparison_depth": 5
    },
    "comparison_rules": {
      "ignore_fields": ["timestamp", "message_id", "signature"],
      "normalize_collections": true,
      "sort_arrays": true,
      "case_insensitive_strings": false
    },
    "validation_levels": {
      "basic": ["safety_properties", "type_invariants"],
      "standard": ["safety_properties", "liveness_properties", "type_invariants"],
      "comprehensive": ["safety_properties", "liveness_properties", "type_invariants", "partial_synchrony_properties", "performance_properties"],
      "whitepaper_validation": ["whitepaper_theorems", "safety_properties", "liveness_properties"],
      "full_correspondence": ["whitepaper_theorems", "safety_properties", "liveness_properties", "type_invariants", "partial_synchrony_properties"]
    },
    "whitepaper_correspondence": {
      "validator_config": {
        "whitepaper_path": "Solana Alpenglow White Paper v1.1.md",
        "tla_path": "proofs/WhitepaperTheorems.tla",
        "mapping_document": "docs/WhitepaperMapping.md",
        "output_directory": "reports/correspondence",
        "correspondence_threshold": 90.0,
        "mathematical_equivalence_threshold": 85.0
      },
      "validation_checks": {
        "theorem_presence": {
          "check_whitepaper_coverage": true,
          "check_tla_coverage": true,
          "require_complete_mapping": true,
          "expected_theorem_count": 25
        },
        "statement_correspondence": {
          "check_mathematical_equivalence": true,
          "check_assumption_alignment": true,
          "check_condition_alignment": true,
          "check_proof_technique_alignment": true
        },
        "verification_status": {
          "check_tlaps_verification": true,
          "check_proof_obligations": true,
          "check_backend_performance": true,
          "require_machine_verification": true
        },
        "mapping_document_validation": {
          "check_claims_vs_reality": true,
          "validate_verification_status": true,
          "check_traceability_matrix": true,
          "flag_discrepancies": true
        }
      },
      "reporting": {
        "generate_json_report": true,
        "generate_markdown_report": true,
        "generate_dashboard_update": true,
        "include_detailed_metrics": true,
        "correspondence_score_breakdown": true,
        "discrepancy_analysis": true
      },
      "integration": {
        "run_with_cross_validation": true,
        "update_mapping_document": true,
        "trigger_on_theorem_changes": true,
        "fail_on_major_discrepancies": true,
        "correspondence_score_threshold": 75.0
      }
    }
  },
  "implementation_status": {
    "whitepaper_theorems": {
      "whitepaper_safety_theorem": "verified",
      "whitepaper_liveness_theorem": "verified",
      "lemma_20_notarization_exclusivity": "verified",
      "lemma_21_fast_finalization": "verified",
      "lemma_22_vote_exclusivity": "verified",
      "lemma_23_notarization_uniqueness": "verified",
      "lemma_24_single_block_notarized": "verified",
      "lemma_25_finalized_implies_notarized": "verified",
      "lemma_26_slow_finalization": "verified",
      "lemma_27_window_vote_properties": "verified",
      "lemma_28_window_chain_consistency": "verified",
      "lemma_29_honest_vote_carryover": "verified",
      "lemma_30_window_completion": "verified",
      "lemma_31_same_window_consistency": "verified",
      "lemma_32_cross_window_consistency": "verified",
      "lemma_33_timeout_progression": "verified",
      "lemma_34_view_synchronization": "verified",
      "lemma_35_adaptive_timeout_growth": "verified",
      "lemma_36_timeout_sufficiency": "verified",
      "lemma_37_progress_under_timeout": "verified",
      "lemma_38_eventual_timeout_sufficiency": "verified",
      "lemma_39_view_advancement": "verified",
      "lemma_40_eventual_progress": "verified",
      "lemma_41_timeout_propagation": "verified",
      "lemma_42_timeout_synchronization": "verified"
    },
    "safety_properties": {
      "safety_no_conflicting_finalization": "implemented",
      "safety_no_double_voting": "implemented",
      "safety_valid_certificates": "implemented",
      "byzantine_resilience": "implemented",
      "safety_vote_uniqueness": "implemented",
      "safety_view_convergence": "implemented",
      "rotor_non_equivocation": "implemented",
      "erasure_coding_validity": "implemented",
      "bandwidth_safety": "implemented",
      "load_balanced_assignment": "implemented",
      "reconstruction_correctness": "implemented",
      "network_integrity": "implemented",
      "bounded_delivery_property": "implemented",
      "partition_detection": "implemented",
      "channel_integrity": "implemented"
    },
    "liveness_properties": {
      "liveness_eventual_progress": "implemented",
      "liveness_network_healing": "implemented",
      "progress_guarantee": "implemented",
      "view_progression": "implemented",
      "block_delivery": "implemented",
      "liveness_block_delivery": "implemented",
      "liveness_view_change": "implemented"
    },
    "partial_synchrony_properties": {
      "partial_synchrony_model": "implemented",
      "gst_delivery_guarantees": "implemented",
      "message_ordering": "implemented",
      "delta_bounded_delivery": "implemented",
      "network_synchrony": "implemented",
      "timeout_correctness": "implemented"
    },
    "performance_properties": {
      "bandwidth_utilization": "implemented",
      "buffer_bounds": "implemented",
      "congestion_control": "implemented",
      "throughput_optimization": "implemented",
      "latency_bounds": "implemented",
      "resource_efficiency": "implemented"
    }
  },
  "property_categories": {
    "whitepaper_main_theorems": [
      "whitepaper_safety_theorem",
      "whitepaper_liveness_theorem"
    ],
    "whitepaper_voting_lemmas": [
      "lemma_20_notarization_exclusivity",
      "lemma_21_fast_finalization",
      "lemma_22_vote_exclusivity",
      "lemma_23_notarization_uniqueness",
      "lemma_24_single_block_notarized",
      "lemma_25_finalized_implies_notarized",
      "lemma_26_slow_finalization",
      "lemma_27_window_vote_properties"
    ],
    "whitepaper_chain_consistency": [
      "lemma_28_window_chain_consistency",
      "lemma_29_honest_vote_carryover",
      "lemma_30_window_completion",
      "lemma_31_same_window_consistency",
      "lemma_32_cross_window_consistency"
    ],
    "whitepaper_liveness_infrastructure": [
      "lemma_33_timeout_progression",
      "lemma_34_view_synchronization",
      "lemma_35_adaptive_timeout_growth",
      "lemma_36_timeout_sufficiency",
      "lemma_37_progress_under_timeout",
      "lemma_38_eventual_timeout_sufficiency",
      "lemma_39_view_advancement",
      "lemma_40_eventual_progress",
      "lemma_41_timeout_propagation",
      "lemma_42_timeout_synchronization"
    ],
    "core_safety": [
      "safety_no_conflicting_finalization",
      "safety_no_double_voting",
      "safety_valid_certificates"
    ],
    "byzantine_tolerance": [
      "byzantine_resilience",
      "safety_vote_uniqueness",
      "network_integrity"
    ],
    "consensus_correctness": [
      "safety_view_convergence",
      "liveness_eventual_progress",
      "view_progression"
    ],
    "erasure_coding": [
      "rotor_non_equivocation",
      "erasure_coding_validity",
      "reconstruction_correctness"
    ],
    "network_properties": [
      "bandwidth_safety",
      "bounded_delivery_property",
      "partition_detection",
      "channel_integrity"
    ],
    "performance_optimization": [
      "throughput_optimization",
      "congestion_control",
      "bandwidth_utilization",
      "latency_bounds"
    ]
  },
  "error_mapping": {
    "rust_errors_to_tla": {
      "ProtocolViolation": "ASSERTION_FAILED",
      "ByzantineDetected": "BYZANTINE_BEHAVIOR",
      "NetworkError": "NETWORK_FAILURE",
      "InvalidConfig": "INVALID_CONSTANTS",
      "TheoremCorrespondenceError": "CORRESPONDENCE_MISMATCH",
      "WhitepaperMappingError": "MAPPING_INCONSISTENCY"
    },
    "tla_errors_to_rust": {
      "ASSERTION_FAILED": "ProtocolViolation",
      "BYZANTINE_BEHAVIOR": "ByzantineDetected", 
      "NETWORK_FAILURE": "NetworkError",
      "INVALID_CONSTANTS": "InvalidConfig",
      "CORRESPONDENCE_MISMATCH": "TheoremCorrespondenceError",
      "MAPPING_INCONSISTENCY": "WhitepaperMappingError"
    }
  },
  "whitepaper_verification_pipeline": {
    "verification_steps": [
      {
        "step": "theorem_extraction",
        "description": "Extract theorems from whitepaper and TLA+ files",
        "tool": "theorem_correspondence_validator.py",
        "required": true,
        "timeout_seconds": 300
      },
      {
        "step": "correspondence_validation",
        "description": "Validate mathematical equivalence between statements",
        "tool": "theorem_correspondence_validator.py",
        "required": true,
        "timeout_seconds": 600
      },
      {
        "step": "tlaps_verification",
        "description": "Run TLAPS verification on all whitepaper theorems",
        "tool": "verify_whitepaper_correspondence.sh",
        "required": true,
        "timeout_seconds": 2700
      },
      {
        "step": "mapping_document_validation",
        "description": "Validate claims in WhitepaperMapping.md against actual results",
        "tool": "automated_verification_tracking.py",
        "required": true,
        "timeout_seconds": 180
      },
      {
        "step": "cross_validation_integration",
        "description": "Integrate whitepaper validation with Stateright cross-validation",
        "tool": "run_all.sh",
        "required": true,
        "timeout_seconds": 1800
      },
      {
        "step": "dashboard_update",
        "description": "Update verification dashboard with correspondence results",
        "tool": "automated_verification_tracking.py",
        "required": false,
        "timeout_seconds": 120
      }
    ],
    "success_criteria": {
      "minimum_correspondence_score": 85.0,
      "required_theorem_coverage": 100.0,
      "maximum_discrepancy_count": 3,
      "tlaps_verification_required": true,
      "mapping_document_accuracy_required": true
    },
    "failure_handling": {
      "on_correspondence_failure": "fail_pipeline",
      "on_tlaps_failure": "fail_pipeline",
      "on_mapping_inconsistency": "warn_and_continue",
      "on_timeout": "fail_pipeline",
      "generate_detailed_report": true
    },
    "output_artifacts": {
      "correspondence_report_json": "reports/correspondence/theorem_correspondence_report.json",
      "correspondence_report_markdown": "reports/correspondence/theorem_correspondence_report.md",
      "verification_status_json": "reports/verification/whitepaper_verification_status.json",
      "dashboard_data": "reports/dashboard/verification_dashboard_data.json",
      "discrepancy_log": "reports/correspondence/discrepancies.log"
    }
  },
  "theorem_test_mapping": {
    "rust_test_to_theorem": {
      "test_safety_no_conflicting_finalization": ["theorem_1_safety", "lemma_31", "lemma_32"],
      "test_liveness_eventual_progress": ["theorem_2_liveness", "lemma_40", "lemma_41", "lemma_42"],
      "test_vote_exclusivity": ["lemma_20", "lemma_22"],
      "test_fast_finalization_properties": ["lemma_21"],
      "test_slow_finalization_properties": ["lemma_26"],
      "test_certificate_uniqueness": ["lemma_23", "lemma_24", "lemma_25"],
      "test_window_consistency": ["lemma_28", "lemma_29", "lemma_30", "lemma_31", "lemma_32"],
      "test_timeout_mechanisms": ["lemma_33", "lemma_34", "lemma_35", "lemma_36", "lemma_37", "lemma_38"],
      "test_view_progression": ["lemma_39", "lemma_40"],
      "test_timeout_synchronization": ["lemma_41", "lemma_42"]
    },
    "theorem_to_rust_test": {
      "theorem_1_safety": ["test_safety_no_conflicting_finalization"],
      "theorem_2_liveness": ["test_liveness_eventual_progress"],
      "lemma_20": ["test_vote_exclusivity"],
      "lemma_21": ["test_fast_finalization_properties"],
      "lemma_22": ["test_vote_exclusivity"],
      "lemma_23": ["test_certificate_uniqueness"],
      "lemma_24": ["test_certificate_uniqueness"],
      "lemma_25": ["test_certificate_uniqueness"],
      "lemma_26": ["test_slow_finalization_properties"],
      "lemma_27": ["test_window_consistency"],
      "lemma_28": ["test_window_consistency"],
      "lemma_29": ["test_window_consistency"],
      "lemma_30": ["test_window_consistency"],
      "lemma_31": ["test_safety_no_conflicting_finalization", "test_window_consistency"],
      "lemma_32": ["test_safety_no_conflicting_finalization", "test_window_consistency"],
      "lemma_33": ["test_timeout_mechanisms"],
      "lemma_34": ["test_timeout_mechanisms"],
      "lemma_35": ["test_timeout_mechanisms"],
      "lemma_36": ["test_timeout_mechanisms"],
      "lemma_37": ["test_timeout_mechanisms"],
      "lemma_38": ["test_timeout_mechanisms"],
      "lemma_39": ["test_view_progression"],
      "lemma_40": ["test_liveness_eventual_progress", "test_view_progression"],
      "lemma_41": ["test_liveness_eventual_progress", "test_timeout_synchronization"],
      "lemma_42": ["test_liveness_eventual_progress", "test_timeout_synchronization"]
    }
  }
}
